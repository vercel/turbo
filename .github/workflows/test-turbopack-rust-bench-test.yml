name: Turbopack Rust testing benchmarks
on:
  workflow_call:
    inputs:
      runner:
        type: string
      os:
        type: string
      all:
        type: boolean

env:
  TURBOPACK_BENCH_COUNTS: "100"
  TURBOPACK_BENCH_PROGRESS: "1"

jobs:
  test:
    name: Test
    # alias custom runner name to our labels array
    runs-on: ${{ inputs.runner == 'ubuntu-latest-metal' && fromJSON('[ "self-hosted", "linux", "x64", "metal" ]') || inputs.runner }}
    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
        if: inputs.os == 'windows'

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: ./.github/actions/setup-rust
        with:
          save-cache: true

      - name: Set Up Protoc
        id: set-up-protoc
        continue-on-error: true
        uses: arduino/setup-protoc@v1.2.0
        with:
          version: "3.x"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Up Protoc (second try)
        if: steps.set-up-protoc.outcome == 'failure'
        uses: arduino/setup-protoc@v1.2.0
        with:
          version: "3.x"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: ./.github/actions/setup-node
        with:
          node-version: 18

      - name: Build benchmarks for tests
        timeout-minutes: 120
        run: |
          cargo tp-bench-test --no-run

      - name: Run cargo test on benchmarks
        timeout-minutes: 120
        run: |
          cargo tp-bench-test

      - name: Build benchmarks for tests for other bundlers
        if: inputs.all
        timeout-minutes: 120
        run: |
          cargo test --benches --release -p turbopack-bench --no-run

      - name: Run cargo test on benchmarks for other bundlers
        if: inputs.all
        timeout-minutes: 120
        run: |
          cargo test --benches --release -p turbopack-bench
