name: 2. Turborepo Release (go binary)

env:
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

on:
  workflow_dispatch:
    inputs:
      release_branch:
        description: "Staging branch to run release from"

jobs:
  smoke-test-with-examples:
    strategy:
      fail-false: false
      matrix:
        os:
          - name: ubuntu
            runner: ubuntu-latest
          - name: macos
            runner: macos-latest
        manager: [yarn, npm]
        example: [with-yarn, with-npm, non-monorepo]
        include:
          - os:
              name: ubuntu
              runner: ubuntu-latest
            manager: pnpm
            example: basic
          - os:
              name: macos
              runner: macos-latest
            manager: pnpm
            example: basic
          - os:
              name: ubuntu
              runner: ubuntu-latest
            manager: pnpm
            example: kitchen-sink
          - os:
              name: macos
              runner: macos-latest
            manager: pnpm
            example: kitchen-sink
          - os:
              name: ubuntu
              runner: ubuntu-latest
            manager: pnpm
            example: with-svelte
          - os:
              name: macos
              runner: macos-latest
            manager: pnpm
            example: with-svelte

    runs-on: ${{ matrix.os.runner }}
    steps:
      # Used by scripts/check-examples.sh
      - name: Install Sponge
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get install -y moreutils
          else
            brew install moreutils
          fi

      - name: Checkout
        uses: actions/checkout@v3

      - uses: ./.github/actions/setup-turborepo-environment
        with:
          target: ${{ matrix.os.name }}
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Setup Pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 7.2.1

      - name: Make sure pnpm always has a cache
        shell: bash
        run: |
          mkdir -p `pnpm store path`

      - name: Disable corepack
        shell: bash
        run: corepack disable

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: ${{ matrix.manager }}
          cache-dependency-path: package.json

      - name: Check \"${{ matrix.example }}\" example with \"${{ matrix.manager }}\"
        shell: bash
        env:
          FORCE_COLOR: true
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
          TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
          TURBO_REMOTE_ONLY: true
        run: pnpm -- turbo run run-example -- "${{ matrix.example }}" "${{ matrix.manager }}"

  darwin:
    needs: [smoke-test-with-examples]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.release_branch }}
      - run: git fetch origin --tags
      - uses: ./.github/actions/setup-go
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser-pro
          version: latest
          install-only: true
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
      - name: Build Artifacts
        run: cd cli && make build-go-turbo-darwin
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: turbo-go-darwin-${{ inputs.release_branch }}
          path: cli/dist-darwin

  # compiles linux and windows in a container
  cross:
    needs: [smoke-test-with-examples]
    runs-on: ubuntu-latest
    container:
      image: docker://ghcr.io/vercel/turbo-cross:v1.18.5
    steps:
      - uses: actions/checkout@v3
        with:
          ref: "${{ inputs.release_branch }}"
      - run: git fetch origin --tags
      - uses: ./.github/actions/setup-go
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser-pro
          version: latest
          install-only: true
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
      - name: Build Artifacts
        run: cd cli && make build-go-turbo-cross
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: turbo-go-cross-${{ inputs.release_branch }}
          path: cli/dist-cross
