name: Turborepo Test (Go Fallback)
on:
  push:
    branches: [main]
    paths:
      - .cargo/**
      - Cargo.*
      - Cargo.**
      - cli/**
      - crates/turborepo*/**
      - package.json
      - pnpm-lock.yaml
      - rust-toolchain
      - shim/**
      - turborepo-tests/helpers/**
      - turborepo-tests/integration/**
      - version.txt
      - xtask/**
  pull_request:
    paths:
      - .cargo/**
      - Cargo.*
      - Cargo.**
      - cli/**
      - crates/turborepo*/**
      - package.json
      - pnpm-lock.yaml
      - rust-toolchain
      - shim/**
      - turborepo-tests/helpers/**
      - turborepo-tests/integration/**
      - version.txt
      - xtask/**

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

permissions:
  actions: write
  contents: read
  pull-requests: read

jobs:
  lint:
    name: Lint
    runs-on:
      - "self-hosted"
      - "linux"
      - "x64"
      - "metal"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: ./.github/actions/setup-go
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Setup Rust
        uses: ./.github/actions/setup-rust

      - name: Setup Protos
        run: cd cli && make compile-protos

      - name: Build turborepo-ffi
        run: cd cli && make turborepo-ffi-install

      - name: golangci
        uses: golangci/golangci-lint-action@v3
        with:
          # More config options documented here: https://github.com/golangci/golangci-lint-action
          version: latest
          working-directory: cli
          args: --new-from-rev=${{ github.event.pull_request.base.sha || 'HEAD~1' }}

  unit:
    name: Unit Tests
    runs-on: ${{ matrix.os.runner }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - name: ubuntu
            runner:
              - "self-hosted"
              - "linux"
              - "x64"
              - "metal"
          - runner: macos-latest
          - runner: windows-latest

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-turborepo-environment
        with:
          windows: ${{ matrix.os.runner == 'windows-latest' }}
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - run: turbo run test --filter=cli --color

  integration:
    name: Integration
    runs-on: ${{ matrix.os.runner }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - runner: ubuntu-latest
          - runner: macos-latest
          - runner: windows-latest
    steps:
      # On Windows, set autocrlf to input so that when the repo is cloned down
      # the fixtures retain their line endings and don't get updated to CRLF.
      # We want this because this repo also contains the fixtures for our test cases
      # and these fixtures have files that need stable file hashes. If we let git update
      # the line endings on checkout, the file hashes will change.
      # https://www.git-scm.com/book/en/v2/Customizing-Git-Git-Configuration#_core_autocrlf
      - name: set crlf
        if: matrix.os.runner == 'windows-latest'
        shell: bash
        run: git config --global core.autocrlf input

      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-turborepo-environment
        with:
          windows: ${{ matrix.os.runner == 'windows-latest' }}
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Setup Graphviz
        uses: ts-graphviz/setup-graphviz@v1
        with:
          macos-skip-brew-update: "true"
        env:
          HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: true

      - name: Integration Tests
        run: turbo run test:go-fallback --filter=turborepo-tests-integration --color --env-mode=strict --token=${{ secrets.TURBO_TOKEN }} --team=${{ vars.TURBO_TEAM }}
