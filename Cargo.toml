[workspace]
resolver = "2"

members = [
  "crates/node-file-trace",
  "crates/turbo-tasks*",
  "crates/turbopack*",
  "crates/turborepo*",
  "packages/turbo-repository/rust/",
  "xtask",
]

default-members = [
  "crates/node-file-trace",
  "crates/turbo-tasks",
  "crates/turbo-tasks-auto-hash-map",
  "crates/turbo-tasks-build",
  "crates/turbo-tasks-bytes",
  "crates/turbo-tasks-env",
  "crates/turbo-tasks-fetch",
  "crates/turbo-tasks-fs",
  "crates/turbo-tasks-hash",
  "crates/turbo-tasks-macros-shared",
  "crates/turbo-tasks-macros-tests",
  "crates/turbo-tasks-malloc",
  "crates/turbo-tasks-memory",
  "crates/turbo-tasks-signposter",
  "crates/turbo-tasks-signposter-sys",
  "crates/turbo-tasks-testing",
  "crates/turbo-tasks-tracing-signpost",
  "crates/turbopack",
  "crates/turbopack-bench",
  "crates/turbopack-cli-utils",
  "crates/turbopack-core",
  "crates/turbopack-create-test-app",
  "crates/turbopack-css",
  "crates/turbopack-dev",
  "crates/turbopack-dev-server",
  "crates/turbopack-ecmascript",
  "crates/turbopack-env",
  "crates/turbopack-json",
  "crates/turbopack-mdx",
  "crates/turbopack-node",
  "crates/turbopack-static",
  "crates/turbopack-swc-ast-explorer",
  "crates/turbopack-swc-utils",
  "crates/turbopack-test-utils",
  "crates/turbopack-tests",
  "crates/turbopack-wasm",
  "xtask",
]

[workspace.metadata.groups]
# Only the libraries, does not include the turborepo binary.
# That way we don't have to build the Go code
turborepo-libraries = ["path:crates/turborepo-*"]
turborepo = ["path:crates/turborepo*"]
turbopack = [
  "path:crates/turbopack*",
  "path:crates/turbo-tasks*",
  "path:crates/node-file-trace",
]

[profile.dev.package.turbo-tasks-macros]
opt-level = 3

# Set the settings for build scripts and proc-macros.
[profile.dev.build-override]
opt-level = 3

[profile.release]
lto = "off"

# Declare dependencies used across workspace packages requires single version bump.
# ref: https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#inheriting-a-dependency-from-a-workspace
[workspace.dependencies]
async-recursion = "1.0.2"
# Keep consistent with preset_env_base through swc_core
browserslist-rs = { version = "0.12.2" }

mdxjs = "0.1.19"
modularize_imports = { version = "0.50.0" }
styled_components = { version = "0.77.0" }
styled_jsx = { version = "0.54.0" }
swc_core = { version = "0.86.10", features = [
  "ecma_loader_lru",
  "ecma_loader_parking_lot",
] }
swc_emotion = { version = "0.53.0" }
swc_relay = { version = "0.25.0" }
testing = { version = "0.35.0" }

auto-hash-map = { path = "crates/turbo-tasks-auto-hash-map" }
node-file-trace = { path = "crates/node-file-trace", default-features = false }
signposter = { path = "crates/turbo-tasks-signposter" }
signposter-sys = { path = "crates/turbo-tasks-signposter-sys" }
tracing-signpost = { path = "crates/turbo-tasks-tracing-signpost" }
swc-ast-explorer = { path = "crates/turbopack-swc-ast-explorer" }
turbo-tasks-malloc = { path = "crates/turbo-tasks-malloc", default-features = false }
turbo-tasks = { path = "crates/turbo-tasks" }
turbo-tasks-build = { path = "crates/turbo-tasks-build" }
turbo-tasks-bytes = { path = "crates/turbo-tasks-bytes" }
turbo-tasks-env = { path = "crates/turbo-tasks-env" }
turbo-tasks-fetch = { path = "crates/turbo-tasks-fetch", default-features = false }
turbo-tasks-fs = { path = "crates/turbo-tasks-fs" }
turbo-tasks-hash = { path = "crates/turbo-tasks-hash" }
turbo-tasks-macros = { path = "crates/turbo-tasks-macros" }
turbo-tasks-macros-shared = { path = "crates/turbo-tasks-macros-shared" }
turbo-tasks-macros-tests = { path = "crates/turbo-tasks-macros-tests" }
turbo-tasks-memory = { path = "crates/turbo-tasks-memory" }
turbo-tasks-testing = { path = "crates/turbo-tasks-testing" }
turbo-updater = { path = "crates/turborepo-updater" }
turbopack = { path = "crates/turbopack" }
turbopack-bench = { path = "crates/turbopack-bench" }
turbopack-build = { path = "crates/turbopack-build" }
turbopack-cli = { path = "crates/turbopack-cli" }
turbopack-cli-utils = { path = "crates/turbopack-cli-utils" }
turbopack-core = { path = "crates/turbopack-core" }
turbopack-create-test-app = { path = "crates/turbopack-create-test-app" }
turbopack-css = { path = "crates/turbopack-css" }
turbopack-dev = { path = "crates/turbopack-dev" }
turbopack-dev-server = { path = "crates/turbopack-dev-server" }
turbopack-ecmascript = { path = "crates/turbopack-ecmascript" }
turbopack-ecmascript-plugins = { path = "crates/turbopack-ecmascript-plugins", default-features = false }
turbopack-ecmascript-runtime = { path = "crates/turbopack-ecmascript-runtime" }
turbopack-ecmascript-hmr-protocol = { path = "crates/turbopack-ecmascript-hmr-protocol" }
turbopack-env = { path = "crates/turbopack-env" }
turbopack-image = { path = "crates/turbopack-image" }
turbopack-json = { path = "crates/turbopack-json" }
turbopack-mdx = { path = "crates/turbopack-mdx" }
turbopack-node = { path = "crates/turbopack-node" }
turbopack-static = { path = "crates/turbopack-static" }
turbopack-swc-utils = { path = "crates/turbopack-swc-utils" }
turbopack-test-utils = { path = "crates/turbopack-test-utils" }
turbopack-tests = { path = "crates/turbopack-tests" }
turbopack-wasm = { path = "crates/turbopack-wasm" }
turbopath = { path = "crates/turborepo-paths" }
turborepo = { path = "crates/turborepo" }
turborepo-api-client = { path = "crates/turborepo-api-client" }
turborepo-cache = { path = "crates/turborepo-cache" }
turborepo-ci = { path = "crates/turborepo-ci" }
turborepo-env = { path = "crates/turborepo-env" }
turborepo-ffi = { path = "crates/turborepo-ffi" }
turborepo-fs = { path = "crates/turborepo-fs" }
turborepo-lib = { path = "crates/turborepo-lib", default-features = false }
turborepo-lockfiles = { path = "crates/turborepo-lockfiles" }
turborepo-repository = { path = "crates/turborepo-repository" }
turborepo-ui = { path = "crates/turborepo-ui" }
turborepo-scm = { path = "crates/turborepo-scm" }
wax = { path = "crates/turborepo-wax" }
turborepo-vercel-api = { path = "crates/turborepo-vercel-api" }
turborepo-vercel-api-mock = { path = "crates/turborepo-vercel-api-mock" }

# Be careful when selecting tls backend, including change default tls backend.
# If you changed, must verify with ALL build targets with next-swc to ensure
# it works. next-swc have various platforms, some doesn't support native (using openssl-sys)
# and some aren't buildable with rustls.
reqwest = { version = "0.11.14", default-features = false }

chromiumoxide = { version = "0.5.0", features = [
  "tokio-runtime",
], default-features = false }
# For matching on errors from chromiumoxide. Keep in
# sync with chromiumoxide's tungstenite requirement.
tungstenite = "0.18.0"

anyhow = "1.0.69"
assert_cmd = "2.0.8"
async-compression = { version = "0.3.13", default-features = false, features = [
  "gzip",
  "tokio",
] }
async-trait = "0.1.64"
atty = "0.2.14"
axum = "0.6.2"
axum-server = "0.4.4"
bytes = "1.1.0"
camino = { version = "1.1.4", features = ["serde1"] }
chrono = "0.4.23"
clap = "4.1.6"
clap_complete = "4.1.2"
concurrent-queue = "2.1.0"
console = "0.15.5"
console-subscriber = "0.1.8"
criterion = "0.4.0"
crossbeam-channel = "0.5.8"
dashmap = "5.4.0"
dialoguer = "0.10.3"
dunce = "1.0.3"
futures = "0.3.26"
futures-retry = "0.6.0"
hex = "0.4.3"
httpmock = { version = "0.6.8", default-features = false }
image = { version = "0.24.6", default-features = false }
indexmap = "1.9.2"
indicatif = "0.17.3"
indoc = "2.0.0"
itertools = "0.10.5"
lazy_static = "1.4.0"
mime = "0.3.16"
nohash-hasher = "0.2.0"
once_cell = "1.17.1"
owo-colors = "3.5.0"
parking_lot = "0.12.1"
path-clean = "1.0.1"
pathdiff = "0.2.1"
petgraph = "0.6.3"
pin-project-lite = "0.2.9"
port_scanner = "0.1.5"
postcard = "1.0.4"
predicates = "2.1.5"
pretty_assertions = "1.3.0"
proc-macro2 = "1.0.51"
qstring = "0.7.2"
quote = "1.0.23"
rand = "0.8.5"
regex = "1.7.0"
rstest = "0.16.0"
rustc-hash = "1.1.0"
semver = "1.0.16"
serde = { version = "1.0.152", features = ["derive"] }
serde_json = "1.0.93"
serde_qs = "0.11.0"
serde_with = "2.3.2"
serde_yaml = "0.9.17"
sha2 = "0.10.6"
smallvec = { version = "1.11.1", features = [
  "serde",
  "const_generics",
  "union",
  "const_new",
] }
sourcemap = "6.0.2"
syn = "1.0.107"
tempfile = "3.3.0"
test-case = "3.0.0"
thiserror = "1.0.48"
tiny-gradient = "0.1.0"
tokio = "1.25.0"
tokio-util = { version = "0.7.7", features = ["io"] }
tracing = "0.1.37"
tracing-appender = "0.2.2"
tracing-subscriber = "0.3.16"
url = "2.2.2"
urlencoding = "2.1.2"
webbrowser = "0.8.7"
which = "4.4.0"

[patch.crates-io]
ast_node = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
better_scoped_tls = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
binding_macros = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
dbg-swc = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
from_variant = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
jsdoc = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
preset_env_base = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
string_enum = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_atoms = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_bundler = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_cached = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_cli_impl = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_common = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_compiler_base = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_config = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_config_macro = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_core = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_css = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_css_ast = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_css_codegen = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_css_codegen_macros = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_css_compat = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_css_lints = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_css_minifier = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_css_modules = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_css_parser = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_css_prefixer = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_css_utils = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_css_visit = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_ast = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_codegen = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_codegen_macros = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_compat_bugfixes = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_compat_common = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_compat_es2015 = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_compat_es2016 = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_compat_es2017 = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_compat_es2018 = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_compat_es2019 = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_compat_es2020 = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_compat_es2021 = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_compat_es2022 = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_compat_es3 = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_dep_graph = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_ext_transforms = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_lints = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_loader = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_minifier = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_parser = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_preset_env = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_quote = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_quote_macros = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_testing = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_transforms = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_transforms_base = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_transforms_classes = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_transforms_compat = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_transforms_macros = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_transforms_module = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_transforms_optimization = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_transforms_proposal = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_transforms_react = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_transforms_testing = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_transforms_typescript = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_usage_analyzer = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_utils = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecma_visit = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_ecmascript = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_eq_ignore_macros = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_error_reporters = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_estree_ast = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_estree_compat = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_fast_graph = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_graph_analyzer = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_html = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_html_ast = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_html_codegen = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_html_codegen_macros = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_html_minifier = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_html_parser = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_html_utils = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_html_visit = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_macros_common = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_node_base = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_node_bundler = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_node_comments = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_nodejs_common = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_plugin = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_plugin_macro = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_plugin_proxy = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_plugin_runner = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_plugin_testing = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_timer = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_trace_macro = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_visit = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_visit_macros = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_xml = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_xml_ast = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_xml_codegen = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_xml_codegen_macros = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_xml_parser = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
swc_xml_visit = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
testing = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
testing_macros = { git = 'https://github.com/kdy1/swc.git', branch = "kdy-str" }
